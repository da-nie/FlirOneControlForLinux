#ifndef C_THREAD_H
#define C_THREAD_H

//****************************************************************************************************
//Класс работы с потоками
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include <pthread.h>
#include <stdint.h>

//****************************************************************************************************
//прототипы функций
//****************************************************************************************************

//****************************************************************************************************
//Класс работы с потоками
//****************************************************************************************************

class CThread
{
 //-переменные-----------------------------------------------------------------------------------------
 private:
  pthread_t pthread_ID;//идентификатор потока
 //-конструктор----------------------------------------------------------------------------------------
 public:
  CThread(void* (*start_routine)(void*),void *param);
  CThread(void);
 //-деструктор-----------------------------------------------------------------------------------------
  ~CThread();
 //-открытые функции-----------------------------------------------------------------------------------
 public:
  void Create(void* (*start_routine)(void*),void *param);//создать поток
  void Join(void);//ждать завершения потока
};
#endif

