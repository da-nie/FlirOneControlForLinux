#ifndef C_RING_BUFFER_H
#define C_RING_BUFFER_H

//****************************************************************************************************
//Класс кольцевого буфера
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include <stdint.h>

//****************************************************************************************************
//макроопределения
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объявления
//****************************************************************************************************

//****************************************************************************************************
//Класс кольцевого буфера
//****************************************************************************************************
class CRingBuffer
{
 public:
  //-перечисления---------------------------------------------------------------------------------------
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
 private:
  //-переменные-----------------------------------------------------------------------------------------
  uint8_t *Buffer;//буфер данных
  uint32_t Head;//голова в буфере
  uint32_t Tail;//хвост в буфере
  uint32_t Size;//размер буфера
 public:
  //-конструктор----------------------------------------------------------------------------------------
  CRingBuffer(uint32_t size);
  //-деструктор-----------------------------------------------------------------------------------------
  ~CRingBuffer();
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  void PushByte(uint8_t b);//добавить байт в кольцевой буфер
  bool PopByte(uint8_t *b);//забрать байт из кольцевого буфера
  bool PopShort(uint16_t *s);//забрать два байта из кольцевого буфера
  uint32_t GetDataSize(void) const;//получить сколько байт в кольцевом буфере
  uint32_t GetHeadPos(void) const;//получить позицию головы буфера
  uint32_t GetTailPos(void) const;//получить позицию хвоста буфера
  uint32_t GetBufferSize(void) const;//получить общий размер буфера
  void Reset(void);//удалить данные из буфера
  uint8_t GetByte(uint32_t pos) const;//получить значение из буфера
  void SetTailPos(uint32_t pos);//задать позицию хвоста буфера
  void SetHeadPos(uint32_t pos);//задать позицию головы буфера
 private:
  //-закрытые функции-----------------------------------------------------------------------------------  
};

#endif
