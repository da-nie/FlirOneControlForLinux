#ifndef C_PICTURE_H
#define C_PICTURE_H

//****************************************************************************************************
//Класс простого изображения
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include "iimage.h"
#include <vector>
#include <stdint.h>

//****************************************************************************************************
//макроопределения
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объявления
//****************************************************************************************************

//****************************************************************************************************
//Класс простого изображения
//****************************************************************************************************
class CPicture:public IImage
{
 public:
  //-перечисления---------------------------------------------------------------------------------------
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
 private:
  //-переменные-----------------------------------------------------------------------------------------
  uint32_t Width;//ширина
  uint32_t Height;//высота
  std::vector<uint32_t> vector_Image;//данные изображения
 public:
  //-конструктор----------------------------------------------------------------------------------------
  CPicture(void);
  //-деструктор-----------------------------------------------------------------------------------------
  ~CPicture();
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  void GetRGBAImage(uint32_t &width,uint32_t &height,std::vector<uint32_t> &vector_image);//получить изображение в формате RGBA
  void SetRGBAImage(const uint32_t &width,const uint32_t &height,const std::vector<uint32_t> &vector_image);//задать изображение в формате RGBA
  void SetSize(uint32_t width,uint32_t height);//задать размер изображения и выделить память
  void SetRGBAPixel(uint32_t x,uint32_t y,uint32_t color);//задать точку
  uint32_t GetRGBAPixel(uint32_t x,uint32_t y);//получить точку
 private:
  //-закрытые функции-----------------------------------------------------------------------------------  
};

#endif
