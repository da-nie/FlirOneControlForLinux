//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include "clabel_imagearea.h"
#include <stdint.h>

//****************************************************************************************************
//глобальные переменные
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//макроопределения
//****************************************************************************************************

//****************************************************************************************************
//конструктор и деструктор
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//конструктор
//----------------------------------------------------------------------------------------------------
CLabel_ImageArea::CLabel_ImageArea(uint32_t width,uint32_t height,QWidget *parent):QLabel(parent)
{
 qImage=QImage(width,height,QImage::Format_RGBA8888);
 for(size_t y=0;y<height;y++)
 {
  for(size_t x=0;x<width;x++)
  {
   qImage.setPixel(x,y,qRgb(0,0,0));
  }
 }
}
//----------------------------------------------------------------------------------------------------
//деструктор
//----------------------------------------------------------------------------------------------------
CLabel_ImageArea::~CLabel_ImageArea()
{
}
//****************************************************************************************************
//закрытые функции
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//обработчик события перерисовки
//----------------------------------------------------------------------------------------------------
void CLabel_ImageArea::paintEvent(QPaintEvent *qPaintEvent_Ptr)
{
 setGeometry(0,0,parentWidget()->width(),parentWidget()->height());
 setMaximumSize(parentWidget()->width(),parentWidget()->height());
 setMinimumSize(parentWidget()->width(),parentWidget()->height());

 QLabel::paintEvent(qPaintEvent_Ptr); 
 QPixmap qPixmap=QPixmap::fromImage(qImage); 
// setPixmap(qPixmap.scaled(this->width(),this->height(),Qt::KeepAspectRatio));
 setPixmap(qPixmap.scaled(this->width(),this->height()));

}
//****************************************************************************************************
//открытые функции
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//заменить изображение
//----------------------------------------------------------------------------------------------------
void CLabel_ImageArea::Redraw(const uint32_t *image_data)
{     
 const uint32_t *vptr=image_data;
 uint32_t linesize=qImage.width();
 //делаем перекодирование цветов для вывода на экран
 for(int32_t y=0;y<qImage.height();y++,vptr+=linesize)
 {
  const uint32_t *vptr_local=vptr;
  for(int32_t x=0;x<qImage.width();x++,vptr_local++)
  {
   uint32_t color=*vptr_local;
   uint8_t b=(color>>0)&0xff;
   uint8_t g=(color>>8)&0xff;
   uint8_t r=(color>>16)&0xff;
   qImage.setPixel(x,y,qRgb(r,g,b));
  }
 }
 update();
}
